<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExcelColumnsDELETE_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelColumnsDELETE_DeleteColumn" xml:space="preserve">
    <value>列の削除</value>
    <comment>Delete column</comment>
  </data>
  <data name="ExcelColumnsDELETE_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelColumnsDELETE_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelColumnsDELETE_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelColumnsDELETE_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelColumnsDELETE_ExcelPathDesc" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize.</comment>
  </data>
  <data name="ExcelColumnsDELETE_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelColumnsDELETE_SheetNameDesc" xml:space="preserve">
    <value>シート名。</value>
    <comment>The sheet name.</comment>
  </data>
  <data name="ExcelColumnsDELETE_ColumnIndexes" xml:space="preserve">
    <value>Column Indexes</value>
    <comment>Column Indexes</comment>
  </data>
  <data name="ExcelColumnsDELETE_ColumnIndexesDesc" xml:space="preserve">
    <value>列インデックス一覧。書式：{num}; {num},{num},...; {num}-{num}。例：1,3-5</value>
    <comment>The column indexes. format: {num}; {num},{num},...; {num}-{num}. for example: 1,3-5</comment>
  </data>
  <data name="ExcelColumnsDELETE_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelColumnsDELETE_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelColumnsPOST_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelColumnsPOST_AddColumns" xml:space="preserve">
    <value>列の追加</value>
    <comment>Add Columns</comment>
  </data>
  <data name="ExcelColumnsPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelColumnsPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelColumnsPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelColumnsPOST_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelColumnsPOST_ExcelPathDesc" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize.</comment>
  </data>
  <data name="ExcelColumnsPOST_ColumnIndex" xml:space="preserve">
    <value>Column Index</value>
    <comment>Column Index</comment>
  </data>
  <data name="ExcelColumnsPOST_ColumnIndexDesc" xml:space="preserve">
    <value>追加する列インデックス。</value>
    <comment>The column index.</comment>
  </data>
  <data name="ExcelColumnsPOST_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelColumnsPOST_SheetNameDesc" xml:space="preserve">
    <value>シート名。</value>
    <comment>The sheet name.</comment>
  </data>
  <data name="ExcelColumnsPOST_Count" xml:space="preserve">
    <value>Count</value>
    <comment>Count</comment>
  </data>
  <data name="ExcelColumnsPOST_CountDesc" xml:space="preserve">
    <value>追加する列数。</value>
    <comment>The count of columns.</comment>
  </data>
  <data name="ExcelColumnsPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelColumnsPOST_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelColumnsPUT_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelColumnsPUT_UpdateColumn" xml:space="preserve">
    <value>列の更新</value>
    <comment>Update column</comment>
  </data>
  <data name="ExcelColumnsPUT_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelColumnsPUT_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelColumnsPUT_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelColumnsPUT_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelColumnsPUT_ExcelPathDesc" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize.</comment>
  </data>
  <data name="ExcelColumnsPUT_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelColumnsPUT_SheetNameDesc" xml:space="preserve">
    <value>シート名。</value>
    <comment>The sheet name.</comment>
  </data>
  <data name="ExcelColumnsPUT_ColumnIndexes" xml:space="preserve">
    <value>Column Indexes</value>
    <comment>Column Indexes</comment>
  </data>
  <data name="ExcelColumnsPUT_ColumnIndexesDesc" xml:space="preserve">
    <value>列インデックス一覧。書式：{num}; {num},{num},...; {num}-{num}。例：1,3-5</value>
    <comment>The column indexes. format: {num}; {num},{num},...; {num}-{num}. for example: 1,3-5</comment>
  </data>
  <data name="ExcelColumnsPUT_PropertyName" xml:space="preserve">
    <value>Property Name</value>
    <comment>Property Name</comment>
  </data>
  <data name="ExcelColumnsPUT_PropertyNameDesc" xml:space="preserve">
    <value>更新する列のプロパティ名。使用可能なプロパティは Visible(bool) と OutlineLevel(int)です。</value>
    <comment>The property name of column, available properties are "Visible(bool)" and "OutlineLevel(int)"</comment>
  </data>
  <data name="ExcelColumnsPUT_PropertyValue" xml:space="preserve">
    <value>Property Value</value>
    <comment>Property Value</comment>
  </data>
  <data name="ExcelColumnsPUT_PropertyValueDesc" xml:space="preserve">
    <value>更新する列のプロパティ値。</value>
    <comment>The property value of column.</comment>
  </data>
  <data name="ExcelColumnsPUT_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelColumnsPUT_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelColumnsPUT_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelColumnsPOST_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelColumnsDELETE_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelFindGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelFindGET_Find" xml:space="preserve">
    <value>検索</value>
    <comment>Find</comment>
  </data>
  <data name="ExcelFindGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelFindGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelFindGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelFindGET_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelFindGET_ExcelPathDesc" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize. </comment>
  </data>
  <data name="ExcelFindGET_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelFindGET_SheetNameDesc" xml:space="preserve">
    <value>検索するシート名。指定しない場合は、すべてのシートを検索します。</value>
    <comment>The sheet name (if not provide, find in all sheets).</comment>
  </data>
  <data name="ExcelFindGET_Text" xml:space="preserve">
    <value>検索するテキスト。</value>
    <comment>Text</comment>
  </data>
  <data name="ExcelFindGET_TextDesc" xml:space="preserve">
    <value>検索に使用する値。</value>
    <comment>The value which is used to search.</comment>
  </data>
  <data name="ExcelFindGET_MatchCase" xml:space="preserve">
    <value>Match Case</value>
    <comment>Match Case</comment>
  </data>
  <data name="ExcelFindGET_MatchCaseDesc" xml:space="preserve">
    <value>大文字小文字を区別するかどうかを示すブール値。</value>
    <comment>A boolean value indicates whether to search the value with case sensitive.</comment>
  </data>
  <data name="ExcelFindGET_WholeCell" xml:space="preserve">
    <value>Whole Cell</value>
    <comment>Whole Cell</comment>
  </data>
  <data name="ExcelFindGET_WholeCellDesc" xml:space="preserve">
    <value>セル全体を検索するかどうかを示すブール値。</value>
    <comment>A boolean value indicates whether to search the value with matching the whole cell.</comment>
  </data>
  <data name="ExcelFindGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelFindGET_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_FileNameDesc" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_TypeDesc" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_WorkBookFileName" xml:space="preserve">
    <value>WorkBookFileName</value>
    <comment>WorkBookFileName</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_WorkBookFileName_None" xml:space="preserve">
    <value>Excelファイル名を選択</value>
    <comment>Select a Excel file name</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_WorkBookFileNameDesc" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイルファイル名。</value>
    <comment>The excel file name that storage manager can recognize.</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatGET_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_FileNameDesc" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_TypeDesc" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel.</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_WorkbookFile" xml:space="preserve">
    <value>WorkbookFile</value>
    <comment>WorkbookFile</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_WorkbookFileDesc" xml:space="preserve">
    <value>クライアント側からポストされるExcelファイル。使用可能なファイル形式：xls、xlsx、csv。</value>
    <comment>The excel file which is posted from client side. The file can be: xls, xlsx, csv.</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingConvertFormatPOST_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_FileNameDesc" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_TemplateFileName" xml:space="preserve">
    <value>TemplateFileName</value>
    <comment>TemplateFileName</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_TemplateFileNameText" xml:space="preserve">
    <value>テンプレートファイル名。指定しない場合は、自動的にテンプレートを生成します。</value>
    <comment>The Template file name (if not provide, use generated template automatically).</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_DataName" xml:space="preserve">
    <value>DataName</value>
    <comment>DataName</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_DataNameText" xml:space="preserve">
    <value>データプロバイダが認識するデータ名。</value>
    <comment>The data name that data provider recognizes.</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_DataName_None" xml:space="preserve">
    <value>データソースを選択</value>
    <comment>Select a DataSource</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_DataName_DataCollection" xml:space="preserve">
    <value>データコレクション</value>
    <comment>Data Collection</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_DataName_TableFromNwindDatabase" xml:space="preserve">
    <value>Nwind データベースのテーブル</value>
    <comment>Table from Nwind Database</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingFromDataGET_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_FileNameText" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_TemplateFileName" xml:space="preserve">
    <value>TemplateFileName</value>
    <comment>TemplateFileName</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_TemplateFileNameText" xml:space="preserve">
    <value>テンプレートファイル名。指定しない場合は、自動的にテンプレートを生成。</value>
    <comment>The Template file name (if not provide, use generated template automatically).</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel.</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_Data" xml:space="preserve">
    <value>Data</value>
    <comment>Data</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_DataText" xml:space="preserve">
    <value>クライアント側からポストされるデータコレクション。</value>
    <comment>A data collection which is posted from client side.</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingFromJSONPOST_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_Text" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_FileNameText" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel.</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_Workbook" xml:space="preserve">
    <value>Workbook</value>
    <comment>Workbook</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_WorkbookText" xml:space="preserve">
    <value>クライアント側からポストされるワークブック。</value>
    <comment>The workbook which is posted from client side.</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingFromWorkbookPOST_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_FileNameText" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_TemplateFileName" xml:space="preserve">
    <value>TemplateFileName</value>
    <comment>TemplateFileName</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_TemplateFileNameText" xml:space="preserve">
    <value>テンプレートファイル名（指定しない場合は、生成されたテンプレートを自動的に使用）。</value>
    <comment>The Template file name (if not provide, use generated template automatically).</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_DataFileName" xml:space="preserve">
    <value>DataFileName</value>
    <comment>DataFileName</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_DataFileName_None" xml:space="preserve">
    <value>XMLファイル名を選択</value>
    <comment>Select a XML file name</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_DataFileNameText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるxmlデータファイル名。
                    このXMLデータファイルのコンテンツはコレクションに似て、1 つのルート要素がその子要素と同じ複数の要素を持ちます。
                    &lt;pre&gt;
&amp;lt;orders&amp;gt;
    &amp;lt;order id="1"&amp;gt;
        &amp;lt;price&amp;gt;1000&amp;lt;/price&amp;gt;
    &amp;lt;/order&amp;gt;
    ......
 &amp;lt;/orders&amp;gt;&lt;/pre&gt;</value>
    <comment>The xml data file name that storage manager can recognize.
                    The content of the xml data file is collection-like, a root element with multiple same elements as its children:
                    &lt;pre&gt;
&amp;lt;orders&amp;gt;
    &amp;lt;order id="1"&amp;gt;
        &amp;lt;price&amp;gt;1000&amp;lt;/price&amp;gt;
    &amp;lt;/order&amp;gt;
    ......
 &amp;lt;/orders&amp;gt;&lt;/pre&gt;</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingFromXMLGET_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_GenerateExcel" xml:space="preserve">
    <value>Excelの生成</value>
    <comment>Generate Excel</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_FileNameText" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_TemplateFile" xml:space="preserve">
    <value>TemplateFile</value>
    <comment>TemplateFile</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_TemplateFileText" xml:space="preserve">
    <value>テンプレートファイル名。指定しない場合は、自動的にテンプレートを生成します。</value>
    <comment>The Template file (if not provide, use generated template automatically).</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel.</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_DataFile" xml:space="preserve">
    <value>DataFile</value>
    <comment>DataFile</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_DataFileText" xml:space="preserve">
    <value>クライアント側からポストされたXMLデータファイル。このXMLデータファイルのコンテンツはコレクションに似て、1 つのルート要素がその子要素と同じ複数の要素を持ちます。
&lt;pre&gt;
&amp;lt;orders&amp;gt;
    &amp;lt;order id="1"&amp;gt;
        &amp;lt;price&amp;gt;1000&amp;lt;/price&amp;gt;
    &amp;lt;/order&amp;gt;
    ......
 &amp;lt;/orders&amp;gt;&lt;/pre&gt;</value>
    <comment>The xml data file which is posted from client side.The content of the xml data file is collection-like, a root element with multiple same elements as its children:
&lt;pre&gt;
&amp;lt;orders&amp;gt;
    &amp;lt;order id="1"&amp;gt;
        &amp;lt;price&amp;gt;1000&amp;lt;/price&amp;gt;
    &amp;lt;/order&amp;gt;
    ......
 &amp;lt;/orders&amp;gt;&lt;/pre&gt;</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelGeneratingFromXMLPOST_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelMergingGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelMergingGET_MergeExcel" xml:space="preserve">
    <value>Excelの結合</value>
    <comment>Merge Excel</comment>
  </data>
  <data name="ExcelMergingGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelMergingGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelMergingGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelMergingGET_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelMergingGET_FileNameText" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelMergingGET_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelMergingGET_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel.</comment>
  </data>
  <data name="ExcelMergingGET_FileNamesToMerge" xml:space="preserve">
    <value>FileNamesToMerge</value>
    <comment>FileNamesToMerge</comment>
  </data>
  <data name="ExcelMergingGET_FileNamesToMerge_None" xml:space="preserve">
    <value>Excelファイルを選択</value>
    <comment>Select a Excel file</comment>
  </data>
  <data name="ExcelMergingGET_FileNamesToMergeText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるExcelファイル名。</value>
    <comment>The excel file names that storage manager can recognize.</comment>
  </data>
  <data name="ExcelMergingGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelMergingGET_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelMergingGET_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelMergingPOST_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelMergingPOST_MergeExcel" xml:space="preserve">
    <value>Excelの結合</value>
    <comment>Merge Excel</comment>
  </data>
  <data name="ExcelMergingPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelMergingPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelMergingPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelMergingPOST_FileName" xml:space="preserve">
    <value>FileName</value>
    <comment>FileName</comment>
  </data>
  <data name="ExcelMergingPOST_FileNameText" xml:space="preserve">
    <value>エクスポートされたファイルの名前。</value>
    <comment>The exported file name.</comment>
  </data>
  <data name="ExcelMergingPOST_Type" xml:space="preserve">
    <value>Type</value>
    <comment>Type</comment>
  </data>
  <data name="ExcelMergingPOST_TypeText" xml:space="preserve">
    <value>Excelのファイル形式。</value>
    <comment>The file format of the excel.</comment>
  </data>
  <data name="ExcelMergingPOST_FilesToMerge" xml:space="preserve">
    <value>FilesToMerge</value>
    <comment>FilesToMerge</comment>
  </data>
  <data name="ExcelMergingPOST_FilesToMergeText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるExcelファイル名。</value>
    <comment>The excel file names that storage manager can recognize.</comment>
  </data>
  <data name="ExcelMergingPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelMergingPOST_ShowJsonDataByFlexGrid" xml:space="preserve">
    <value>JSON データを FlexGrid で表示</value>
    <comment>Show Json Data by FlexGrid</comment>
  </data>
  <data name="ExcelMergingPOST_ShowXMLData" xml:space="preserve">
    <value>XML データの表示</value>
    <comment>Show XML Data</comment>
  </data>
  <data name="ExcelReplaceGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelReplaceGET_Replace" xml:space="preserve">
    <value>置換</value>
    <comment>Replace</comment>
  </data>
  <data name="ExcelReplaceGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelReplaceGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelReplaceGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelReplaceGET_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelReplaceGET_ExcelPathText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるExcelファイル名。</value>
    <comment>The excel file name that storage manager can recognize. </comment>
  </data>
  <data name="ExcelReplaceGET_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelReplaceGET_SheetNameText" xml:space="preserve">
    <value>置換するシート名。指定しない場合は、すべてのシートを置換。</value>
    <comment>The sheet name (if not provide, replace in all sheets).</comment>
  </data>
  <data name="ExcelReplaceGET_Text" xml:space="preserve">
    <value>Text</value>
    <comment>Text</comment>
  </data>
  <data name="ExcelReplaceGET_TextText" xml:space="preserve">
    <value>置換されるテキスト。</value>
    <comment>The text which is replaced.</comment>
  </data>
  <data name="ExcelReplaceGET_NewText" xml:space="preserve">
    <value>New Text</value>
    <comment>New Text</comment>
  </data>
  <data name="ExcelReplaceGET_NewTextText" xml:space="preserve">
    <value>置き換える新しいテキスト。</value>
    <comment>The new text to replace.</comment>
  </data>
  <data name="ExcelReplaceGET_MatchCase" xml:space="preserve">
    <value>Match Case</value>
    <comment>Match Case</comment>
  </data>
  <data name="ExcelReplaceGET_MatchCaseText" xml:space="preserve">
    <value>大文字小文字を区別するかどうかを示すブール値。</value>
    <comment>A boolean value indicates whether to search the value with case sensitive.</comment>
  </data>
  <data name="ExcelReplaceGET_WholeCell" xml:space="preserve">
    <value>セル全体</value>
    <comment>Whole Cell</comment>
  </data>
  <data name="ExcelReplaceGET_WholeCellText" xml:space="preserve">
    <value>セル全体を検索するかどうかを示すブール値。</value>
    <comment>A boolean value indicates whether to search the value with matching a whole word.</comment>
  </data>
  <data name="ExcelReplaceGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelReplaceGET_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelReplaceGET_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelRowsDELETE_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelRowsDELETE_DeleteRow" xml:space="preserve">
    <value>行の削除</value>
    <comment>Delete row</comment>
  </data>
  <data name="ExcelRowsDELETE_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelRowsDELETE_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelRowsDELETE_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelRowsDELETE_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelRowsDELETE_ExcelPathText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize. </comment>
  </data>
  <data name="ExcelRowsDELETE_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelRowsDELETE_SheetNameText" xml:space="preserve">
    <value>シート名。</value>
    <comment>The sheet name.</comment>
  </data>
  <data name="ExcelRowsDELETE_RowIndexes" xml:space="preserve">
    <value>Row Indexes</value>
    <comment>Row Indexes</comment>
  </data>
  <data name="ExcelRowsDELETE_RowIndexesText" xml:space="preserve">
    <value>行インデックス。書式：{num}; {num},{num},...; {num}-{num}。例：1,3-5</value>
    <comment>the row indexes. format: {num}; {num},{num},...; {num}-{num}. for example: 1,3-5</comment>
  </data>
  <data name="ExcelRowsDELETE_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelRowsDELETE_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelRowsDELETE_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelRowsPOST_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelRowsPOST_AddRows" xml:space="preserve">
    <value>行の追加</value>
    <comment>Add Rows</comment>
  </data>
  <data name="ExcelRowsPOST_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelRowsPOST_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelRowsPOST_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelRowsPOST_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelRowsPOST_ExcelPathText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize. </comment>
  </data>
  <data name="ExcelRowsPOST_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelRowsPOST_SheetNameText" xml:space="preserve">
    <value>シート名。</value>
    <comment>The sheet name.</comment>
  </data>
  <data name="ExcelRowsPOST_RowIndex" xml:space="preserve">
    <value>Row Indexes</value>
    <comment>Row Index</comment>
  </data>
  <data name="ExcelRowsPOST_RowIndexText" xml:space="preserve">
    <value>追加する行のインデックス。</value>
    <comment>The row index.</comment>
  </data>
  <data name="ExcelRowsPOST_Count" xml:space="preserve">
    <value>Count</value>
    <comment>Count</comment>
  </data>
  <data name="ExcelRowsPOST_CountText" xml:space="preserve">
    <value>追加する行数。</value>
    <comment>The count of rows.</comment>
  </data>
  <data name="ExcelRowsPOST_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelRowsPOST_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelRowsPOST_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelRowsPUT_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelRowsPUT_UpdateRow" xml:space="preserve">
    <value>行の更新</value>
    <comment>Update row</comment>
  </data>
  <data name="ExcelRowsPUT_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelRowsPUT_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelRowsPUT_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelRowsPUT_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelRowsPUT_ExcelPathText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize.</comment>
  </data>
  <data name="ExcelRowsPUT_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
    <comment>Sheet Name</comment>
  </data>
  <data name="ExcelRowsPUT_SheetNameText" xml:space="preserve">
    <value>シート名。</value>
    <comment>The sheet name.</comment>
  </data>
  <data name="ExcelRowsPUT_RowIndexes" xml:space="preserve">
    <value>Row Indexes</value>
    <comment>Row Indexes</comment>
  </data>
  <data name="ExcelRowsPUT_RowIndexesText" xml:space="preserve">
    <value>更新する行インデックス。書式：{num}; {num},{num},...; {num}-{num}。例：1,3-5</value>
    <comment>the row indexes. format: {num}; {num},{num},...; {num}-{num}. for example: 1,3-5</comment>
  </data>
  <data name="ExcelRowsPUT_PropertyName" xml:space="preserve">
    <value>プロパティ名</value>
    <comment>Property Name</comment>
  </data>
  <data name="ExcelRowsPUT_PropertyNameText" xml:space="preserve">
    <value>更新する行のプロパティ名。使用可能なプロパティは"Visible(bool)"と"OutlineLevel(int)"です。</value>
    <comment>The property name of row, available properties are "Visible(bool)" and "OutlineLevel(int)"</comment>
  </data>
  <data name="ExcelRowsPUT_PropertyValue" xml:space="preserve">
    <value>プロパティ値</value>
    <comment>Property Value</comment>
  </data>
  <data name="ExcelRowsPUT_PropertyValueText" xml:space="preserve">
    <value>更新する行のプロパティの値。</value>
    <comment>The property value of row.</comment>
  </data>
  <data name="ExcelRowsPUT_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelRowsPUT_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelRowsPUT_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
  <data name="ExcelSplitGET_Parameters" xml:space="preserve">
    <value>パラメータ一覧</value>
    <comment>Parameters</comment>
  </data>
  <data name="ExcelSplitGET_SplitExcel" xml:space="preserve">
    <value>Excelの分割</value>
    <comment>Split Excel</comment>
  </data>
  <data name="ExcelSplitGET_Parameter" xml:space="preserve">
    <value>パラメータ</value>
    <comment>Parameter</comment>
  </data>
  <data name="ExcelSplitGET_Value" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="ExcelSplitGET_Description" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="ExcelSplitGET_ExcelPath" xml:space="preserve">
    <value>Excel Path</value>
    <comment>Excel Path</comment>
  </data>
  <data name="ExcelSplitGET_ExcelPathText" xml:space="preserve">
    <value>ストレージマネージャーが認識できるワークブックファイル名。</value>
    <comment>The excel file name that storage manager can recognize. </comment>
  </data>
  <data name="ExcelSplitGET_OutputPath" xml:space="preserve">
    <value>Output Path</value>
    <comment>Output Path</comment>
  </data>
  <data name="ExcelSplitGET_OutputPathText" xml:space="preserve">
    <value>出力するストレージ内のパス。指定しない場合は、ソースと同じパスに出力します。</value>
    <comment>The output path in storage(if not provide, the default output path same as source).</comment>
  </data>
  <data name="ExcelSplitGET_OutputNames" xml:space="preserve">
    <value>Output Names</value>
    <comment>Output Names</comment>
  </data>
  <data name="ExcelSplitGET_OutputNamesText" xml:space="preserve">
    <value>出力するファイル名。指定しない場合は、自動的にファイル名が生成されます。</value>
    <comment>The output file names (if not provide, the output file names will be generated automatically).</comment>
  </data>
  <data name="ExcelSplitGET_RequestUrl" xml:space="preserve">
    <value>要求 URL</value>
    <comment>Request Url</comment>
  </data>
  <data name="ExcelSplitGET_ResponseData" xml:space="preserve">
    <value>応答データ</value>
    <comment>Response Data</comment>
  </data>
  <data name="ExcelSplitGET_ViewFiles" xml:space="preserve">
    <value>ファイルの表示：</value>
    <comment>View Files: </comment>
  </data>
</root>