@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<div class="settings-panel-content">
    <div style="float:left;width:100%">
        <div style="float:left"><h4>@Html.Raw(Excel.ExcelRowsPUT_Parameters)</h4></div>
        <div style="float:right">
            <button style="margin-top:3px;padding: 4px;" class="btn btn-primary"
                    onclick="excelUpdateRow('@Model.FunctionName', '@(Configuration["WebAPIService"])');">
                @Html.Raw(Excel.ExcelRowsPUT_UpdateRow)
            </button>
        </div>
    </div>
    <div>
        <div class="settings-panel excel-updadterow">
            <div class="param-item">
                <label class="param-lable parameter"><b>@Html.Raw(Excel.ExcelRowsPUT_Parameter)</b></label>
                <label class="param-lable value"><b>@Html.Raw(Excel.ExcelRowsPUT_Value)</b></label>
                <label class="param-lable description"><b>@Html.Raw(Excel.ExcelRowsPUT_Description)</b></label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Excel.ExcelRowsPUT_ExcelPath)</label>
                <span class="param-value-group">
                    <select name="excelPath" class="param-value" style="width: 100%">
                        <option value="ExcelRoot/align.xlsx" selected="selected">align.xlsx</option>
                        <option value="ExcelRoot/AllFormats.xlsx">AllFormats.xlsx</option>
                        <option value="ExcelRoot/FlexGrid.xlsx">FlexGrid.xlsx</option>
                        <option value="ExcelRoot/GAS.xlsx">GAS.xlsx</option>
                        <option value="ExcelRoot/Grouping.xlsx">Grouping.xlsx</option>
                        <option value="ExcelRoot/Hierarchical.xlsx">Hierarchical.xlsx</option>
                        <option value="ExcelRoot/Houston.xlsx">Houston.xlsx</option>
                        <option value="ExcelRoot/Palette.xlsx">Palette.xlsx</option>
                        <option value="ExcelRoot/ExcelWithFormula.xlsx">ExcelWithFormula.xlsx</option>
                    </select>
                </span>
                <label class="param-lable description">@Html.Raw(Excel.ExcelRowsPUT_ExcelPathText)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Excel.ExcelRowsPUT_SheetName)</label>
                <input class="param-value value" type="text" name="sheetName" value="Sheet1" />
                <label class="param-lable description">@Html.Raw(Excel.ExcelRowsPUT_SheetNameText)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Excel.ExcelRowsPUT_RowIndexes)</label>
                <input class="param-value value" type="text" name="rowIndexes" value="0" />
                <label class="param-lable description">@Html.Raw(Excel.ExcelRowsPUT_RowIndexesText)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Excel.ExcelRowsPUT_PropertyName)</label>
                <input class="param-value value" type="text" name="propertyName" value="Visible" />
                <label class="param-lable description">@Html.Raw(Excel.ExcelRowsPUT_PropertyNameText)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Excel.ExcelRowsPUT_PropertyValue)</label>
                <input class="param-value value" type="text" name="propertyValue" value="false" />
                <label class="param-lable description">@Html.Raw(Excel.ExcelRowsPUT_PropertyValueText)</label>
            </div>
        </div>
    </div>
</div>
<div id="@(Model.FunctionName)result" class="content-panel-result">
    <h4>@Html.Raw(Excel.ExcelRowsPUT_RequestUrl)</h4>
    <div id="@(Model.FunctionName)url" class="content-panel-result-url">
        <pre>
        </pre>
    </div>
    <h4 class="content-json-data">@Html.Raw(Excel.ExcelRowsPUT_ResponseData)</h4>
    <div id="@(Model.FunctionName)showdata" class="result-content-data" style="height:auto">
        <pre style="max-height:200px">
        </pre>
        <span>@Html.Raw(Excel.ExcelRowsPUT_ViewFiles)</span><span class="viewfiles"></span>
    </div>
</div>

<script>
    function excelUpdateRow(id, url) {
        var excelPath = $(".excel-updadterow .param-value[name=excelPath]").val();
        var sheetName = $(".excel-updadterow .param-value[name=sheetName]").val();
        var rowIndexes = $(".excel-updadterow .param-value[name=rowIndexes]").val();
        var propertyName = $(".excel-updadterow .param-value[name=propertyName]").val();
        var propertyValue = $(".excel-updadterow .param-value[name=propertyValue]").val();
        var fullUrl = url + "api/excel/" + excelPath + "/" + sheetName + "/rows/" + rowIndexes;

        $("#@(Model.FunctionName)url pre").text(fullUrl);

        $.ajax({
            type: "PUT",
            url: fullUrl,
            data: propertyName + "=" + propertyValue,
            cache: false,
            success: function (data) {
                $("#@(Model.FunctionName)showdata pre").text(JSON.stringify(data, null, 4));
                $("#@(Model.FunctionName)result").show();
                $(".content-json-data").show();
                updateViewFilesLink("#@(Model.FunctionName)showdata span.viewfiles", url, [excelPath]);
            }
        });
    }
</script>
