@model WebApiExplorer.Models.ControlsClass.Function

<div class="settings-panel-content">
    <div style="float:left;width:100%">
        <div style="float:left"><h4>@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_Parameters)</h4></div>
        <div style="float:right">
            <button style="margin-top:3px;padding: 4px;" class="btn btn-primary"
                    onclick="generateExcelGet_@(Model.FunctionName)('@Model.FunctionName', '@(System.Configuration.ConfigurationManager.AppSettings["WebAPIService"] + Model.FunctionUrl.Substring(1))');">
                @Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_GenerateExcel)
            </button>
        </div>
    </div>
    <div>
        <div class="settings-panel">
            <div class="param-item">
                <label class="param-lable parameter"><b>@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_Parameter)</b></label>
                <label class="param-lable value"><b>@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_Value)</b></label>
                <label class="param-lable description"><b>@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_Description)</b></label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_FileName)</label>
                <input class="param-value value" type="text" name="FileName" value="excel" />
                <label class="param-lable description">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_FileNameDesc)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_TemplateFileName)</label>
                <select class="param-value value" name="TemplateFileName">
                    <option value=""></option>
                    <option value="ExcelRoot\Templates\SalesTemplate.xlsx">SalesTemplate.xlsx</option>
                    <option value="ExcelRoot\Templates\OrdersTemplate.xlsx">OrdersTemplate.xlsx</option>
                    <option value="ExcelRoot\Templates\ProductsTemplate.xlsx">ProductsTemplate.xlsx</option>
                    <option value="ExcelRoot\Templates\ShippersTemplate.xlsx">ShippersTemplate.xlsx</option>
                </select>
                <label class="param-lable description">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_TemplateFileNameText)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_Type)</label>
                <select class="param-value value" name="type">
                    <option value="json">json</option>
                    <option selected="selected" value="xlsx">xlsx</option>
                    <option value="xls">xls</option>
                    <option value="csv">csv</option>
                    <option value="xml">xml</option>
                </select>
                <label class="param-lable description">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_TypeText)</label>
            </div>
            <div class="param-item">
                <label class="param-lable parameter">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_DataName)</label>
                <select class="param-value value" name="dataname" onchange="dataNameChanged(this)">
                    <option value="none" selected="selected">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_DataName_None)</option>
                    <optgroup label="@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_DataName_DataCollection)">
                        <option value="Sales">Sales</option>
                        <option value="Orders">Orders</option>
                    </optgroup>
                    <optgroup label="@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_DataName_TableFromNwindDatabase)">
                        <option value="Nwind">Products</option>
                        <option value="Nwind">Shippers</option>
                    </optgroup>
                </select>
                <input type="hidden" name="tablename" class="param-value" />
                <label class="param-lable description">
                    @Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_DataNameText)
                </label>
            </div>
        </div>
    </div>
</div>
<div id="@(Model.FunctionName)result" class="content-panel-result content-panel-result-grid">
    <h4>@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_RequestUrl)</h4>
    <div id="@(Model.FunctionName)url" class="content-panel-result-url">
        <pre>
        </pre>
    </div>
    <h4 class="content-json-data">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_ShowJsonDataByFlexGrid)</h4>
    <div id="@(Model.FunctionName)showdata" class="result-content-data">
    </div>
    <h4 class="content-json-xml">@Html.Raw(Resources.Excel.ExcelGeneratingFromDataGET_ShowXMLData)</h4>
    <pre class="result-content-xml">
    </pre>
</div>

<script>
    function generateExcelGet_@(Model.FunctionName)(id, url) {
        includeColumnHeaders = true;
        var fullUrl = showResult(id, url);
        formGet(id, fullUrl);
    }

    function dataNameChanged(select) {
        var tableName = '';
        if (select.value === "Nwind") {
            var option = select.querySelector("option:checked");
            tableName = option.innerHTML;
        }

        var tableNameInput = document.querySelector('[name=tablename]')
        tableNameInput.value = tableName;
    }
</script>
