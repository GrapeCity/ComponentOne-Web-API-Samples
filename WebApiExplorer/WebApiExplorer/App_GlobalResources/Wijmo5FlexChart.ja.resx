<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BoxWhisker_GroupWidth" xml:space="preserve">
    <value>グループ幅：</value>
    <comment>Group Width:</comment>
  </data>
  <data name="BoxWhisker_GapWidth" xml:space="preserve">
    <value>ギャップ幅：</value>
    <comment>Gap Width:</comment>
  </data>
  <data name="BoxWhisker_ShowMeanLine" xml:space="preserve">
    <value>平均線の表示</value>
    <comment>Show Mean Line</comment>
  </data>
  <data name="BoxWhisker_ShowMeanMarker" xml:space="preserve">
    <value>平均マーカーの表示</value>
    <comment>Show Mean Marker</comment>
  </data>
  <data name="BoxWhisker_ShowInnerPoints" xml:space="preserve">
    <value>内側ポイントの表示</value>
    <comment>Show Inner Points</comment>
  </data>
  <data name="BoxWhisker_ShowOutliers" xml:space="preserve">
    <value>異常値の表示</value>
    <comment>Show Outliers</comment>
  </data>
  <data name="BoxWhisker_Rotated" xml:space="preserve">
    <value>回転</value>
    <comment>Rotated</comment>
  </data>
  <data name="BoxWhisker_ShowLabel" xml:space="preserve">
    <value>ラベルの表示</value>
    <comment>Show Label</comment>
  </data>
  <data name="BoxWhisker_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart 箱ひげ図系列を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart Box and Whisker series to image file.</comment>
  </data>
  <data name="Bubble_Text0" xml:space="preserve">
    <value>このサンプルでは、wijmo5 バブル FlexChart を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a wijmo5 bubble FlexChart to image file.</comment>
  </data>
  <data name="ErrorBar_Direction" xml:space="preserve">
    <value>方向：</value>
    <comment>Direction:</comment>
  </data>
  <data name="ErrorBar_ChartType" xml:space="preserve">
    <value>チャートタイプ：</value>
    <comment>Chart Type:</comment>
  </data>
  <data name="ErrorBar_ErrorAmount" xml:space="preserve">
    <value>誤差量：</value>
    <comment>Error Amount:</comment>
  </data>
  <data name="ErrorBar_EndStyle" xml:space="preserve">
    <value>終点スタイル：</value>
    <comment>End Style:</comment>
  </data>
  <data name="ErrorBar_Rotated" xml:space="preserve">
    <value>回転</value>
    <comment>Rotated</comment>
  </data>
  <data name="ErrorBar_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart ErrorBar 系列を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart ErrorBar series to image file.</comment>
  </data>
  <data name="FinancialChart_Text0" xml:space="preserve">
    <value>このサンプルでは、wijmo5 株価 FlexChart を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a wijmo5 Financial FlexChart to image file.</comment>
  </data>
  <data name="HeaderFooter_Text0" xml:space="preserve">
    <value>このサンプルは、ヘッダー/フッターが付いた wijmo5 FlexChart を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a wijmo5 FlexChart with header and footer to image file.</comment>
  </data>
  <data name="HeaderFooter_Header" xml:space="preserve">
    <value>月間売上集計</value>
    <comment>Monthly Sales Summary</comment>
  </data>
  <data name="HeaderFooter_Footer" xml:space="preserve">
    <value>フッター (c) </value>
    <comment>Footer (c) </comment>
  </data>
  <data name="Index_Text0" xml:space="preserve">
    <value>このサンプルでは、wijmo5 FlexChart を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a wijmo5 FlexChart to image file.</comment>
  </data>
  <data name="Labels_ChartType" xml:space="preserve">
    <value>チャートタイプ：</value>
    <comment>Chart Type:</comment>
  </data>
  <data name="Labels_LabelPosition" xml:space="preserve">
    <value>ラベルの位置：</value>
    <comment>Label Position:</comment>
  </data>
  <data name="Labels_LabelsBorder" xml:space="preserve">
    <value>ラベルの境界線：</value>
    <comment>Labels border:</comment>
  </data>
  <data name="Labels_Text0" xml:space="preserve">
    <value>このサンプルは、さまざまなラベルが付いた wijmo5 FlexChart を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a wijmo5 FlexChart with different labels to image file.</comment>
  </data>
  <data name="MovingAverage_Type" xml:space="preserve">
    <value>タイプ</value>
    <comment>Type</comment>
  </data>
  <data name="MovingAverage_Period" xml:space="preserve">
    <value>期間：</value>
    <comment>Period:</comment>
  </data>
  <data name="MovingAverage_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart MovingAverage 系列を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart MovingAverage series to image file.</comment>
  </data>
  <data name="BoxWhisker_QuartileCalculation" xml:space="preserve">
    <value> 四分位数計算：</value>
    <comment> Quartile Calculation:</comment>
  </data>
  <data name="ParametricFunctionSeries_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart ParametricFunctionSeries を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart ParametricFunctionSeries to image file.</comment>
  </data>
  <data name="TrendLine_FitType" xml:space="preserve">
    <value>フィッティングタイプ</value>
    <comment>Fit Type</comment>
  </data>
  <data name="TrendLine_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart TrendLine 系列を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart TrendLine series to image file.</comment>
  </data>
  <data name="Waterfall_IsRelativeData" xml:space="preserve">
    <value>相対データ</value>
    <comment>Is RelativeData</comment>
  </data>
  <data name="Waterfall_ShowConnectorLines" xml:space="preserve">
    <value>接続線を表示</value>
    <comment>Show Connector Lines</comment>
  </data>
  <data name="Waterfall_ShowTotal" xml:space="preserve">
    <value>合計を表示</value>
    <comment>Show Total</comment>
  </data>
  <data name="Waterfall_ShowIntermediateTotal" xml:space="preserve">
    <value>小計を表示</value>
    <comment>Show Intermediate Total</comment>
  </data>
  <data name="Waterfall_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart Waterfall 系列を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart Waterfall series to image file.</comment>
  </data>
  <data name="YFunctionSeries_Text0" xml:space="preserve">
    <value>このサンプルでは、Wijmo 5 FlexChart YFunctionSeries を画像ファイルにエクスポートする方法を示します。</value>
    <comment>This sample demonstrates how to export a Wijmo 5 FlexChart YFunctionSeries to image file.</comment>
  </data>
</root>