//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   强类型资源类，用于查找本地化字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或删除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 Visual Studio 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Resource", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   覆盖当前线程的 CurrentUICulture 属性
        ///   使用此强类型的资源类的资源查找。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///  查找类似 Generate scannable C1 supported barcode on the fly from the (given) text, in/using a variety of standard &lt;a href=\&quot;https://developer.mescius.com/componentone/docs/webapi/online-webapicore/GenerateBarcode.html\&quot;&gt;encoding types&lt;/a&gt;. The barcode so obtained can then be saved as image or stream. 的本地化字符串。
        /// </summary>
        internal static string Barcode_Text1 {
            get {
                return ResourceManager.GetString("Barcode_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Let&apos;s say you want to use barcode in PDF document or a form. You simply need to provide the desired text to be barcoded and the barcode type through your simple client application. The client application sends a GET request to the REST API service, which returns the generated barcode in response as an image stream. Barcode service lets you save the barcode image to PNG, JPEG, BMP, GIF, or TIFF image formats. Embed/ use the obtained barcode image in PDF or other documents, forms, databases, ID cards and more [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Barcode_Text2 {
            get {
                return ResourceManager.GetString("Barcode_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 DataEngine provides a suite of APIs that allow the user to analyze data from multiple data sources, including SQL Server, other SQL based RDMS servers, NoSQL service, web service, structured files from file/network systems, and more. The aggregating data can be consumed by other controls or application. 的本地化字符串。
        /// </summary>
        internal static string DataEngine_Text1 {
            get {
                return ResourceManager.GetString("DataEngine_Text1", resourceCulture);
            }
        }

        /// <summary>
        ///  查找类似 DataEngine Web API uses a column - oriented data model which is widely used in many open source and commercial analytical databases and libraries. Data Engine can handle up to million records in a fraction of a second. The aggregated data is fetched from the Web API, the client application is simple, and it only sends the corresponding query to the server with some format to fetch the data. For more information about Data Engine services, see &lt;a href =\&quot;https://developer.mescius.com/componentone/docs/webapi/online-webapicore/data-engine.html [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string DataEngine_Text2 {
            get {
                return ResourceManager.GetString("DataEngine_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 This service exposes the following data sources: 的本地化字符串。
        /// </summary>
        internal static string DataEngine_Text3 {
            get {
                return ResourceManager.GetString("DataEngine_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Data Sources 的本地化字符串。
        /// </summary>
        internal static string DataEngine_Title1 {
            get {
                return ResourceManager.GetString("DataEngine_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Web API Studio Edition provides excel services for- import and export of MVC and Wijmo 5 controls, and REST API services to generate and merge excel files. 的本地化字符串。
        /// </summary>
        internal static string Excel_Text1 {
            get {
                return ResourceManager.GetString("Excel_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 nside Web API Edition, you will find HTTP request messages which provide export and import functionalities for Excel files. Also, GET and POST methods aid in generating and merging excel files. Available as Visual Studio template, Web API Edition enables you to create Web API service on Visual Studio. This service can then be consumed by client applications to export/import FlexGrid and Excel data, and generate and merge excel files. 的本地化字符串。
        /// </summary>
        internal static string Excel_Text2 {
            get {
                return ResourceManager.GetString("Excel_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 It provided the following services: 的本地化字符串。
        /// </summary>
        internal static string Excel_Text3 {
            get {
                return ResourceManager.GetString("Excel_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 FlexReports 的本地化字符串。
        /// </summary>
        internal static string FlexReports {
            get {
                return ResourceManager.GetString("FlexReports", resourceCulture);
            }
        }

        /// <summary>
        ///  查找类似 Web API Studio Edition supports image export services for MVC and Wijmo 5 controls. Available as Visual Studio template, C1 Web API enables you to create Web API service on Visual Studio. Client applications then send a request to the Web API service application to export MVC and Wijmo 5 controls as an image. The service supports image export to PNG, JPG, BMP, TIFF, and GIFF &lt;a href=\&quot;https://developer.mescius.com/componentone/docs/webapi/online-webapicore/overview.html\&quot;&gt;formats&lt;/a [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Image_Text1 {
            get {
                return ResourceManager.GetString("Image_Text1", resourceCulture);
            }
        }

        /// <summary>
        ///  查找类似 While you are working with the image services for exporting MVC or Wijmo5 controls, you need to add phantomjs.exe file to your service application. For more information, see &lt;a href=\&quot;https://developer.mescius.com/componentone/docs/webapi/online-webapicore/overview.html\&quot;&gt;How to add phantomjs in your Visual Studio application&lt;/a&gt;. 的本地化字符串。
        /// </summary>
        internal static string Image_Text2 {
            get {
                return ResourceManager.GetString("Image_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 PDF Files 的本地化字符串。
        /// </summary>
        internal static string PdfFiles {
            get {
                return ResourceManager.GetString("PdfFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Web API Studio Edition introduces PDFDocument Services that enables you to build HTTP services, which can be consumed by a variety of clients for viewing, loading and caching PDF documents. These are REST based API services, which communicate with HTML 5 PDFViewer control to display the PDF documents on the web. 的本地化字符串。
        /// </summary>
        internal static string Pdf_Text1 {
            get {
                return ResourceManager.GetString("Pdf_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Available as Visual Studio template, C1 Web API enables you to create PDFDocument service on Visual Studio. Client applications send a request to the PDFDocument service applications to load or export PDF files. The service supports saving your pdf files to Html and Image. 的本地化字符串。
        /// </summary>
        internal static string Pdf_Text2 {
            get {
                return ResourceManager.GetString("Pdf_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Web API Studio Edition releases/ introduces Report Services that enables you to build HTTP services, which can be consumed by a variety of clients for viewing, loading and caching FlexReports and SSRS reports. These are REST based API services, which communicate with HTML 5 ReportViewer control to display the report content on the web. You can view a variety of reports in the HTML5 based ReportViewer control, mainly FlexReport and SSRS reports. 的本地化字符串。
        /// </summary>
        internal static string Report_Text1 {
            get {
                return ResourceManager.GetString("Report_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Available as Visual Studio template, C1 Web API enables you to create reporting services on Visual Studio. Client applications send a request to the report service applications to load reports, export reports, and allow users to use parameters in the report. The service supports exporting your reports to PDF, Excel, HTML, RTF, OpenXML, and Image. 的本地化字符串。
        /// </summary>
        internal static string Report_Text2 {
            get {
                return ResourceManager.GetString("Report_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 Reports 的本地化字符串。
        /// </summary>
        internal static string Report_Text3 {
            get {
                return ResourceManager.GetString("Report_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 This service exposes the following report files: 的本地化字符串。
        /// </summary>
        internal static string Report_Text4 {
            get {
                return ResourceManager.GetString("Report_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///  查找类似 SSRS Reports 的本地化字符串。
        /// </summary>
        internal static string SSRSReports {
            get {
                return ResourceManager.GetString("SSRSReports", resourceCulture);
            }
        }
    }
}
