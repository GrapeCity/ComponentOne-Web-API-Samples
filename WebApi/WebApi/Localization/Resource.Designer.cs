//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.Localization {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Resource() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebApi.Localization.Resource", typeof(Resource).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Generate scannable C1 supported barcode on the fly from the (given) text, in/using a variety of standard &lt;a href=\&quot;http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#SupportedBarcodeSymbology.html\&quot;&gt;encoding types&lt;/a&gt;. The barcode so obtained can then be saved as image or stream..
        /// </summary>
        public static string Barcode_Text1 {
            get {
                return ResourceManager.GetString("Barcode_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  Let&apos;s say you want to use barcode in PDF document or a form. You simply need to provide the desired text to be barcoded and the barcode type through your simple client application. The client application sends a GET request to the REST API service, which returns the generated barcode in response as an image stream. Barcode service lets you save the barcode image to PNG, JPEG, BMP, GIF, or TIFF image formats. Embed/ use the obtained barcode image in PDF or other documents, forms, databases, ID cards and more [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Barcode_Text2 {
            get {
                return ResourceManager.GetString("Barcode_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to DataEngine provides a suite of APIs that allow the user to analyze data from multiple data sources, including SQL Server, other SQL based RDMS servers, NoSQL service, web service, structured files from file/network systems, and more. The aggregating data can be consumed by other controls or application..
        /// </summary>
        public static string DataEngine_Text1 {
            get {
                return ResourceManager.GetString("DataEngine_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  DataEngine Web API uses a column - oriented data model which is widely used in many open source and commercial analytical databases and libraries. Data Engine can handle up to million records in a fraction of a second. The aggregated data is fetched from the Web API, the client application is simple, and it only sends the corresponding query to the server with some format to fetch the data. For more information about Data Engine services, see &lt;a href =\&quot;http://help.grapecity.com/componentone/NetHelp/c1webap [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DataEngine_Text2 {
            get {
                return ResourceManager.GetString("DataEngine_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This service exposes the following data sources:.
        /// </summary>
        public static string DataEngine_Text3 {
            get {
                return ResourceManager.GetString("DataEngine_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Data Sources.
        /// </summary>
        public static string DataEngine_Title1 {
            get {
                return ResourceManager.GetString("DataEngine_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Web API Studio Edition provides excel services for- import and export of MVC and Wijmo 5 controls, and REST API services to generate and merge excel files..
        /// </summary>
        public static string Excel_Text1 {
            get {
                return ResourceManager.GetString("Excel_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to nside Web API Edition, you will find HTTP request messages which provide export and import functionalities for Excel files. Also, GET and POST methods aid in generating and merging excel files. Available as Visual Studio template, Web API Edition enables you to create Web API service on Visual Studio. This service can then be consumed by client applications to export/import FlexGrid and Excel data, and generate and merge excel files..
        /// </summary>
        public static string Excel_Text2 {
            get {
                return ResourceManager.GetString("Excel_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to It provided the following services:.
        /// </summary>
        public static string Excel_Text3 {
            get {
                return ResourceManager.GetString("Excel_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FlexReports.
        /// </summary>
        public static string FlexReports {
            get {
                return ResourceManager.GetString("FlexReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  Web API Studio Edition supports image export services for MVC and Wijmo 5 controls. Available as Visual Studio template, C1 Web API enables you to create Web API service on Visual Studio. Client applications then send a request to the Web API service application to export MVC and Wijmo 5 controls as an image. The service supports image export to PNG, JPG, BMP, TIFF, and GIFF &lt;a href=\&quot;http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#C1.Web.Api~C1.Web.Api.ExportFileType.html\&quot;&gt;formats&lt;/a [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Image_Text1 {
            get {
                return ResourceManager.GetString("Image_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to While you are working with the image services for exporting MVC or Wijmo5 controls, you need to add phantomjs.exe file to your service application. For more information, see &lt;a href=\&quot;http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#Addphantomjs.html\&quot;&gt;How to add phantomjs in your Visual Studio application&lt;/a&gt;..
        /// </summary>
        public static string Image_Text2 {
            get {
                return ResourceManager.GetString("Image_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Web API Studio Edition introduces PDFDocument Services that enables you to build HTTP services, which can be consumed by a variety of clients for viewing, loading and caching PDF documents. These are REST based API services, which communicate with HTML 5 PDFViewer control to display the PDF documents on the web..
        /// </summary>
        public static string Pdf_Text1 {
            get {
                return ResourceManager.GetString("Pdf_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Available as Visual Studio template, C1 Web API enables you to create PDFDocument service on Visual Studio. Client applications send a request to the PDFDocument service applications to load or export PDF files. The service supports saving your pdf files to Html and Image..
        /// </summary>
        public static string Pdf_Text2 {
            get {
                return ResourceManager.GetString("Pdf_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to PDF Files.
        /// </summary>
        public static string PdfFiles {
            get {
                return ResourceManager.GetString("PdfFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Web API Studio Edition releases/ introduces Report Services that enables you to build HTTP services, which can be consumed by a variety of clients for viewing, loading and caching FlexReports and SSRS reports. These are REST based API services, which communicate with HTML 5 ReportViewer control to display the report content on the web. You can view a variety of reports in the HTML5 based ReportViewer control, mainly FlexReport and SSRS reports..
        /// </summary>
        public static string Report_Text1 {
            get {
                return ResourceManager.GetString("Report_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Available as Visual Studio template, C1 Web API enables you to create reporting services on Visual Studio. Client applications send a request to the report service applications to load reports, export reports, and allow users to use parameters in the report. The service supports exporting your reports to PDF, Excel, HTML, RTF, OpenXML, and Image..
        /// </summary>
        public static string Report_Text2 {
            get {
                return ResourceManager.GetString("Report_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reports.
        /// </summary>
        public static string Report_Text3 {
            get {
                return ResourceManager.GetString("Report_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This service exposes the following report files:.
        /// </summary>
        public static string Report_Text4 {
            get {
                return ResourceManager.GetString("Report_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SSRS Reports.
        /// </summary>
        public static string SSRSReports {
            get {
                return ResourceManager.GetString("SSRSReports", resourceCulture);
            }
        }
    }
}
